// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PriceTracker.Modules.Repository.DataAccess.EFCore;

#nullable disable

namespace PriceTracker.Migrations
{
    [DbContext(typeof(PriceTrackerContext))]
    [Migration("20250823110739_UpdatedCitilinkExtractionExecutionState")]
    partial class UpdatedCitilinkExtractionExecutionState
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Domain.MerchEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ShopId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("Merches");

                    b.HasDiscriminator().HasValue("MerchEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Domain.MerchPriceHistory.CurrentPricePointerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentPriceId")
                        .HasColumnType("integer");

                    b.Property<int>("MerchPriceHistoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrentPriceId");

                    b.HasIndex("MerchPriceHistoryId")
                        .IsUnique();

                    b.ToTable("CurrentPricePointerEntity");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Domain.MerchPriceHistory.MerchPriceHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MerchId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MerchId")
                        .IsUnique();

                    b.ToTable("MerchPriceHistoryEntities");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Domain.ShopEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Domain.TimestampedPriceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MerchPriceHistoryId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("MerchPriceHistoryId");

                    b.ToTable("TimestampedPrices");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Infrastructure.CitilinkExtractorStorageStateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("StorageState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CitilinkExtractionStorageStates");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Process.ShopSpecific.Extraction.CatalogTree.CitilinkCatalogBranchEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CitilinkCatalogBranchEntityId")
                        .HasColumnType("integer");

                    b.Property<string>("CurrentCatalogUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsBranchProcessed")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CitilinkCatalogBranchEntityId");

                    b.ToTable("CitilinkCatalogBranchEntity");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Process.ShopSpecific.Extraction.CatalogTree.CitilinkCatalogUrlsTreeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RootId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RootId");

                    b.ToTable("CitilinkCatalogUrlsTreeEntity");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Process.ShopSpecific.Extraction.CitilinkParsingExecutionStateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CatalogUrlsId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CatalogUrlsId");

                    b.ToTable("CitilinkParsingExecutionStateEntity");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Process.TimeExtractionProcessHappened", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastTimeFinished")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastTimeStarted")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("TimeExtractionProcessHappened");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Domain.ShopSpecific.CitilinkMerchEntity", b =>
                {
                    b.HasBaseType("PriceTracker.Modules.Repository.Entities.Domain.MerchEntity");

                    b.Property<string>("CitilinkId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("CitilinkMerchEntity");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Domain.MerchEntity", b =>
                {
                    b.HasOne("PriceTracker.Modules.Repository.Entities.Domain.ShopEntity", "Shop")
                        .WithMany("Merches")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Domain.MerchPriceHistory.CurrentPricePointerEntity", b =>
                {
                    b.HasOne("PriceTracker.Modules.Repository.Entities.Domain.TimestampedPriceEntity", "CurrentPrice")
                        .WithMany()
                        .HasForeignKey("CurrentPriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PriceTracker.Modules.Repository.Entities.Domain.MerchPriceHistory.MerchPriceHistoryEntity", "MerchPriceHistory")
                        .WithOne("CurrentPricePointer")
                        .HasForeignKey("PriceTracker.Modules.Repository.Entities.Domain.MerchPriceHistory.CurrentPricePointerEntity", "MerchPriceHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentPrice");

                    b.Navigation("MerchPriceHistory");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Domain.MerchPriceHistory.MerchPriceHistoryEntity", b =>
                {
                    b.HasOne("PriceTracker.Modules.Repository.Entities.Domain.MerchEntity", "Merch")
                        .WithOne("PriceHistory")
                        .HasForeignKey("PriceTracker.Modules.Repository.Entities.Domain.MerchPriceHistory.MerchPriceHistoryEntity", "MerchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merch");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Domain.TimestampedPriceEntity", b =>
                {
                    b.HasOne("PriceTracker.Modules.Repository.Entities.Domain.MerchPriceHistory.MerchPriceHistoryEntity", "MerchPriceHistory")
                        .WithMany("TimestampedPrices")
                        .HasForeignKey("MerchPriceHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MerchPriceHistory");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Process.ShopSpecific.Extraction.CatalogTree.CitilinkCatalogBranchEntity", b =>
                {
                    b.HasOne("PriceTracker.Modules.Repository.Entities.Process.ShopSpecific.Extraction.CatalogTree.CitilinkCatalogBranchEntity", null)
                        .WithMany("Branches")
                        .HasForeignKey("CitilinkCatalogBranchEntityId");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Process.ShopSpecific.Extraction.CatalogTree.CitilinkCatalogUrlsTreeEntity", b =>
                {
                    b.HasOne("PriceTracker.Modules.Repository.Entities.Process.ShopSpecific.Extraction.CatalogTree.CitilinkCatalogBranchEntity", "Root")
                        .WithMany()
                        .HasForeignKey("RootId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Root");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Process.ShopSpecific.Extraction.CitilinkParsingExecutionStateEntity", b =>
                {
                    b.HasOne("PriceTracker.Modules.Repository.Entities.Process.ShopSpecific.Extraction.CatalogTree.CitilinkCatalogUrlsTreeEntity", "CatalogUrls")
                        .WithMany()
                        .HasForeignKey("CatalogUrlsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatalogUrls");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Domain.MerchEntity", b =>
                {
                    b.Navigation("PriceHistory")
                        .IsRequired();
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Domain.MerchPriceHistory.MerchPriceHistoryEntity", b =>
                {
                    b.Navigation("CurrentPricePointer");

                    b.Navigation("TimestampedPrices");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Domain.ShopEntity", b =>
                {
                    b.Navigation("Merches");
                });

            modelBuilder.Entity("PriceTracker.Modules.Repository.Entities.Process.ShopSpecific.Extraction.CatalogTree.CitilinkCatalogBranchEntity", b =>
                {
                    b.Navigation("Branches");
                });
#pragma warning restore 612, 618
        }
    }
}
